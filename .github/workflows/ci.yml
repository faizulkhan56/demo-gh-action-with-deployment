name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: faizul56/gh-action-dotnet   # your Docker Hub repo
  TAG: latest                              # or use ${{ github.sha }} for immutable tags

jobs:

  # ─────────────── Build & Test ───────────────
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore HelloWorldDemo.sln

      - name: Build solution
        run: dotnet build HelloWorldDemo.sln --configuration Release --no-restore

      - name: Run unit tests
        run: |
          dotnet test tests/HelloWorld.Tests/HelloWorld.Tests.csproj \
            --configuration Release --no-build \
            --logger "trx;LogFileName=test_results.trx"

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/test_results.trx'

  # ───────────── Docker Build & Push ─────────────
  docker-build:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            docker.io/${{ env.IMAGE_NAME }}:latest

  # ─────────────── Deploy via SSH ───────────────
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            echo "Pulling the latest image…"
            docker pull docker.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}

            echo "Stopping old container…"
            docker stop helloworlddemo || true
            docker rm   helloworlddemo || true

            echo "Starting new container…"
            docker run -d \
              --name helloworlddemo \
              -p 80:80 \
              --restart always \
              docker.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}

            echo "✅ Containers on host:"
            docker ps -a

